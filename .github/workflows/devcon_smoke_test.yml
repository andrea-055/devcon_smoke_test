name: Devcon Smoke Test

on:
  schedule:
    - cron: '0 2 * * *'  # Minden nap 2:00-kor fut
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Repository clone
        uses: actions/checkout@v4

      - name: Install Python √©s Playwright
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Playwright dependencies
        run: |
          pip install -r requirements.txt
          pip install allure-pytest
          pip install python-dotenv
          playwright install
          playwright install-deps

      - name: Install Allure CLI manually
        run: |
          mkdir -p ~/allure
          wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz -O ~/allure/allure.tgz
          tar -xvzf ~/allure/allure.tgz -C ~/allure
          echo "export PATH=$HOME/allure/allure-2.25.0/bin:$PATH" >> $GITHUB_ENV

      # K√∂rnyezetenk√©nti mapp√°k l√©trehoz√°sa
      - name: Ensure required directories exist
        run: |
          mkdir -p reports/allure-results/test/history
          mkdir -p reports/allure-results/test/screenshots
          mkdir -p reports/allure-results/eth/history
          mkdir -p reports/allure-results/eth/screenshots
          mkdir -p reports/allure-results/prod/history
          mkdir -p reports/allure-results/prod/screenshots
          mkdir -p reports/allure-report

      # --- History let√∂lt√©se minden k√∂rnyezethez ---
      - name: Download Allure history for test.devcon.buzz
        uses: actions/download-artifact@v4
        with:
          name: allure-history-test
          path: reports/allure-results/test/history
        continue-on-error: true

      - name: Download Allure history for devconbuzz.eth.link
        uses: actions/download-artifact@v4
        with:
          name: allure-history-eth
          path: reports/allure-results/eth/history
        continue-on-error: true

      - name: Download Allure history for devcon.buzz
        uses: actions/download-artifact@v4
        with:
          name: allure-history-prod
          path: reports/allure-results/prod/history
        continue-on-error: true

      # --- Debug: Ellen≈ërz√©s a let√∂lt√∂tt history-ra ---
      - name: Debug Downloaded Allure history
        if: always()
        run: |
          echo "üìÇ Checking history for test.devcon.buzz:"
          ls -la reports/allure-results/test/history || echo "‚ö†Ô∏è No history downloaded for test!"
          echo "üìÇ Checking history for devconbuzz.eth.link:"
          ls -la reports/allure-results/eth/history || echo "‚ö†Ô∏è No history downloaded for eth!"
          echo "üìÇ Checking history for devcon.buzz:"
          ls -la reports/allure-results/prod/history || echo "‚ö†Ô∏è No history downloaded for prod!"

      # --- Teszt futtat√°sa minden k√∂rnyezeten ---
      - name: Debug PYTEST_BASE_URL for test.devcon.buzz
        run: |
          echo "PYTEST_BASE_URL is set to: $PYTEST_BASE_URL"
          PYTEST_BASE_URL=https://test.devcon.buzz/ pytest --alluredir=reports/allure-results/test || true

      - name: Debug PYTEST_BASE_URL for devconbuzz.eth.link
        run: |
          echo "PYTEST_BASE_URL is set to: $PYTEST_BASE_URL"
          PYTEST_BASE_URL=https://devconbuzz.eth.link/ pytest --alluredir=reports/allure-results/eth || true

      - name: Debug PYTEST_BASE_URL for devcon.buzz
        run: |
          echo "PYTEST_BASE_URL is set to: $PYTEST_BASE_URL"
          PYTEST_BASE_URL=https://devcon.buzz/ pytest --alluredir=reports/allure-results/prod || true

      # --- Screenshotok felt√∂lt√©se ---
      - name: Upload test screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: reports/allure-results/*/screenshots
        if: always()

      # --- Allure riport gener√°l√°sa (√∂sszes k√∂rnyezet egy√ºtt) ---
      - name: Generate Allure report
        run: |
          ~/allure/allure-2.25.0/bin/allure generate reports/allure-results/* -o reports/allure-report
        if: always()

      # --- History felt√∂lt√©se minden k√∂rnyezethez ---
      - name: Upload Allure history for test.devcon.buzz
        uses: actions/upload-artifact@v4
        with:
          name: allure-history-test
          path: reports/allure-results/test/history
          if-no-files-found: warn
        if: always()

      - name: Upload Allure history for devconbuzz.eth.link
        uses: actions/upload-artifact@v4
        with:
          name: allure-history-eth
          path: reports/allure-results/eth/history
          if-no-files-found: warn
        if: always()

      - name: Upload Allure history for devcon.buzz
        uses: actions/upload-artifact@v4
        with:
          name: allure-history-prod
          path: reports/allure-results/prod/history
          if-no-files-found: warn
        if: always()

      # --- Debug: Ellen≈ërz√©s a gener√°lt history-ra ---
      - name: Debug Generated Allure history
        if: always()
        run: |
          echo "üìÇ Checking history for test.devcon.buzz after generation:"
          ls -la reports/allure-results/test/history || echo "‚ö†Ô∏è No history generated for test!"
          echo "üìÇ Checking history for devconbuzz.eth.link after generation:"
          ls -la reports/allure-results/eth/history || echo "‚ö†Ô∏è No history generated for eth!"
          echo "üìÇ Checking history for devcon.buzz after generation:"
          ls -la reports/allure-results/prod/history || echo "‚ö†Ô∏è No history generated for prod!"

      # --- Allure riport publik√°l√°sa GitHub Pages-re ---
      - name: Allure report on GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports/allure-report
        if: always()
name: Devcon Smoke Test

on:
  schedule:
    - cron: '0 2 * * *'  # It runs every day at 2 a.m.
  push:
    branches:
      - main
  workflow_dispatch:  # can be executed in GitHub Actions UI

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Repository clone
        uses: actions/checkout@v4

      - name: Install Python √©s Playwright
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Playwright dependencies
        run: |
          pip install -r requirements.txt
          pip install allure-pytest
          pip install python-dotenv
          playwright install
          playwright install-deps

      # --- CLI manually ---
      - name: Install Allure CLI manually
        run: |
          mkdir -p ~/allure
          wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz -O ~/allure/allure.tgz
          tar -xvzf ~/allure/allure.tgz -C ~/allure
          echo "export PATH=$PATH:~/allure/allure-2.25.0/bin" >> ~/.bashrc
          echo "export PATH=$PATH:~/allure/allure-2.25.0/bin" >> ~/.profile
          echo "export PATH=$PATH:~/allure/allure-2.25.0/bin" >> ~/.bash_profile
          source ~/.bashrc
          source ~/.profile
          source ~/.bash_profile

      # --- mkdir ---
      - name: Ensure screenshots folder exists
        run: mkdir -p reports/allure-results/screenshots

      # --- restore prev report ---
      - name: Restore previous Allure history
        if: always()
        run: |
          mkdir -p reports/allure-results/history
          if [ -d reports/allure-report/history ]; then
            cp -r reports/allure-report/history reports/allure-results/
          fi

      # --- run ---
      - name: Test run using Allure report
        run: |
          PYTEST_BASE_URL=https://devcon.buzz/ pytest --alluredir=reports/allure-results || true

      # --- upload sc to GitHub Actions-be (Artifacts) ---
      - name: Upload test screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: reports/allure-results/screenshots

      # --- üìù Allure riport generating using Allure CLI  ---
      - name: Generate Allure report
        run: |
          ~/allure/allure-2.25.0/bin/allure generate reports/allure-results -o reports/allure-report --clean

      # --- üîπ save new Allure history-t ---
      - name: Save Allure history
        if: always()
        run: |
          mkdir -p reports/allure-report/history
          mv -f reports/allure-results/history/* reports/allure-report/history/ || true

      # --- üöÄ Allure riport on GitHub Pages ---
      - name: Allure riport on GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports/allure-report